// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using saam_webapi;

namespace saam_webapi.Migrations
{
    [DbContext(typeof(SAAMDbContext))]
    [Migration("20211209151048_TestMaestros")]
    partial class TestMaestros
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("saam_webapi.Entities.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CostoTextraordinario")
                        .HasColumnType("int");

                    b.Property<int>("CostoTordinario")
                        .HasColumnType("int");

                    b.Property<int>("FaenaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FaenaId");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("saam_webapi.Entities.Faena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Faenas");
                });

            modelBuilder.Entity("saam_webapi.Entities.Inasistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Dias")
                        .HasColumnType("int");

                    b.Property<int>("EspecialidadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Termino")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TrabajadorId")
                        .HasColumnType("int");

                    b.Property<int>("TrbajadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EspecialidadId");

                    b.HasIndex("TrabajadorId");

                    b.ToTable("Inasistencias");
                });

            modelBuilder.Entity("saam_webapi.Entities.Trabajador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EspecialidadId")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Papellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pfono")
                        .HasColumnType("int");

                    b.Property<string>("Planta")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Rut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sapellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sfono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EspecialidadId");

                    b.ToTable("Trabajadores");
                });

            modelBuilder.Entity("saam_webapi.Entities.Especialidad", b =>
                {
                    b.HasOne("saam_webapi.Entities.Faena", "Faena")
                        .WithMany()
                        .HasForeignKey("FaenaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faena");
                });

            modelBuilder.Entity("saam_webapi.Entities.Inasistencia", b =>
                {
                    b.HasOne("saam_webapi.Entities.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("saam_webapi.Entities.Trabajador", "Trabajador")
                        .WithMany()
                        .HasForeignKey("TrabajadorId");

                    b.Navigation("Especialidad");

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("saam_webapi.Entities.Trabajador", b =>
                {
                    b.HasOne("saam_webapi.Entities.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidad");
                });
#pragma warning restore 612, 618
        }
    }
}
